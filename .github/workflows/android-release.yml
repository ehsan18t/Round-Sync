name: Android Release CI

on:
  workflow_dispatch:
    inputs:
      build_variant:
        description: "Build variant to use"
        required: true
        default: "oss"
        type: choice
        options:
          - "oss"
          - "rs"
      signed_build:
        description: "Build signed APK (requires secrets)"
        required: true
        default: false
        type: boolean
  push:
    tags:
      - "v*"

jobs:
  buildRelease:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read Go version from project
        run: echo "GO_VERSION=$(grep -E "^de\.felixnuesse\.extract\.goVersion=" gradle.properties | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      - name: Set up Go from gradle.properties
        uses: actions/setup-go@v4
        with:
          go-version: "${{env.GO_VERSION}}"
        id: go

      - name: Setup Android SDK/NDK
        uses: android-actions/setup-android@v3

      - name: Install NDK from gradle.properties
        run: |
          NDK_VERSION="$(grep -E "^de\.felixnuesse\.extract\.ndkVersion=" gradle.properties | cut -d'=' -f2)"
          sdkmanager "ndk;${NDK_VERSION}"

      - name: Setup signing keystore (if signed build)
        if: ${{ inputs.signed_build == true || startsWith(github.ref, 'refs/tags/v') }}
        run: |
          echo "${{ secrets.SIGNING_KEYSTORE }}" | base64 -d > app/.config/android/roundsync.keystore
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
        env:
          SIGNING_KEYSTORE: ${{ secrets.SIGNING_KEYSTORE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Create keystore directory
        run: mkdir -p app/.config/android/

      - name: Determine build variant
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "BUILD_VARIANT=rs" >> $GITHUB_ENV
            echo "ARTIFACT_PREFIX=release" >> $GITHUB_ENV
          elif [[ "${{ inputs.build_variant }}" == "rs" ]]; then
            echo "BUILD_VARIANT=rs" >> $GITHUB_ENV
            echo "ARTIFACT_PREFIX=release" >> $GITHUB_ENV
          else
            echo "BUILD_VARIANT=oss" >> $GITHUB_ENV
            echo "ARTIFACT_PREFIX=release-oss" >> $GITHUB_ENV
          fi

      - name: Build release APK (signed)
        if: ${{ inputs.signed_build == true || startsWith(github.ref, 'refs/tags/v') }}
        run: ./gradlew assemble${{ env.BUILD_VARIANT }}Release
        env:
          SIGNING_KEYSTORE_PATH: app/.config/android/roundsync.keystore
          SIGNING_KEYSTORE_PASSWORD: ${{ env.KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ env.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ env.KEY_PASSWORD }}

      - name: Build release APK (unsigned)
        if: ${{ inputs.signed_build != true && !startsWith(github.ref, 'refs/tags/v') }}
        run: ./gradlew assemble${{ env.BUILD_VARIANT }}Release -Pandroid.injected.signing.store.file= -Pandroid.injected.signing.store.password= -Pandroid.injected.signing.key.alias= -Pandroid.injected.signing.key.password=

      - name: Upload APK (arm)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-armeabi.apk
          path: ${{ github.workspace }}/app/build/outputs/apk/${{ env.BUILD_VARIANT }}/release/*-${{ env.BUILD_VARIANT }}-armeabi-v7a-release*.apk

      - name: Upload APK (arm64)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-arm64.apk
          path: ${{ github.workspace }}/app/build/outputs/apk/${{ env.BUILD_VARIANT }}/release/*-${{ env.BUILD_VARIANT }}-arm64-v8a-release*.apk

      - name: Upload APK (x86)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-x86.apk
          path: ${{ github.workspace }}/app/build/outputs/apk/${{ env.BUILD_VARIANT }}/release/*-${{ env.BUILD_VARIANT }}-x86-release*.apk

      - name: Upload APK (x64)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-x64.apk
          path: ${{ github.workspace }}/app/build/outputs/apk/${{ env.BUILD_VARIANT }}/release/*-${{ env.BUILD_VARIANT }}-x86_64-release*.apk

      - name: Upload APK (universal)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_PREFIX }}-universal.apk
          path: ${{ github.workspace }}/app/build/outputs/apk/${{ env.BUILD_VARIANT }}/release/*-${{ env.BUILD_VARIANT }}-universal-release*.apk
          retention-days: 30

      - name: Create Release (for tags)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/build/outputs/apk/${{ env.BUILD_VARIANT }}/release/*-${{ env.BUILD_VARIANT }}-*-release*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
